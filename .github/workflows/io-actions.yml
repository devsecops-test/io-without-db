name: "Synopsys Intelligent Security Scan"

on:
  push:
    branches: [ master ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
    
    - name: Start IO Servers
      run: |
        docker login --username rahulguna10 --password ${{secrets.DOCKER_TOKEN}}
        docker pull rahulguna10/io-iq:2021-01
        docker pull rahulguna10/io-workflowengine:2021-01
        docker run --name io-iq -p 9090:9090 -e spring.datasource.url=jdbc:postgresql://0.tcp.ngrok.io:18630/io-db -e io.datasource.type=sql rahulguna10/io-iq:2021-01 &
        docker run --name io-workflowengine -p 9091:9091 rahulguna10/io-workflowengine:2021-01 &
    
    - name: Check IO Server Status
      run: | 
        sleep 45
        curl http://localhost:9090/actuator/health
        curl http://localhost:9091/actuator/health
    
    - name: Synopsys Intelligent Security Scan
      id: prescription
      uses: synopsys-sig/intelligent-security-scan@9ce02cb14c3a1588fe9ca9c18f4d2cc72c842a95
      with:
        additionalWorkflowArgs: --persona=developer --release.type=minor --sast.rescan.threshold=0  --sca.rescan.threshold=0 
                  --polaris.url=${{secrets.ORG_POLARIS_SERVER_URL}} --polaris.token=${{secrets.ORG_POLARIS_ACCESS_TOKEN}} 
                  --sensitive.package.pattern='.*(\\+\\+\\+.*(com\\/example\\/app)).*'
        stage: "IO"
    
    # Please note that the ID in previous step was set to prescription
    # in order for this logic to work also make sure that POLARIS_ACCESS_TOKEN
    # is defined in settings
    #- name: Static Analysis with Polaris
    #  run: |
    #      export POLARIS_SERVER_URL=${{ secrets.ORG_POLARIS_SERVER_URL}}
    #      export POLARIS_ACCESS_TOKEN=${{ secrets.ORG_POLARIS_ACCESS_TOKEN}}
    #      wget -q ${{ secrets.ORG_POLARIS_SERVER_URL}}/api/tools/polaris_cli-linux64.zip
    #      unzip -j polaris_cli-linux64.zip -d /tmp
    #      /tmp/polaris analyze -w
    
    # Please note that the ID in previous step was set to prescription
    # in order for this logic to work
    #- name: Software Composition Analysis with Black Duck
    #  uses: blackducksoftware/github-action@v2
    #  with:
    #     args: '--blackduck.url="${{ secrets.ORG_BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.ORG_BLACKDUCK_TOKEN}}" --detect.tools="SIGNATURE_SCAN,DETECTOR"'
    
    - name: Synopsys Intelligent Security Scan
      uses: synopsys-sig/intelligent-security-scan@9ce02cb14c3a1588fe9ca9c18f4d2cc72c842a95
      with:
        additionalWorkflowArgs: --slack.channel.id=C015LGE7RRQ --slack.token=${{secrets.ORG_SLACK_TOKEN}} 
                --IS_SAST_ENABLED=true --IS_SCA_ENABLED=true 
                --polaris.project.name=sig-devsecops/github-io-sample --polaris.url=${{secrets.ORG_POLARIS_SERVER_URL}} --polaris.token=${{secrets.ORG_POLARIS_ACCESS_TOKEN}} 
                --blackduck.project.name=github-io-sample:1.0.0 --blackduck.url=${{secrets.ORG_BLACKDUCK_URL}} --blackduck.api.token=${{secrets.ORG_BLACKDUCK_TOKEN}}
        stage: "WORKFLOW"
    
    - name: Upload SARIF Report
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: workflowengine-results.sarif.json

    - name: Stop WorkflowEngine Server
      run: |
        docker container stop io-iq
        docker container stop io-workflowengine
